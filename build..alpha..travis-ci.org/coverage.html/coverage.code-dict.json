{"/home/travis/build/npmtest/node-npmtest-retire/test.js":"/* istanbul instrument in package npmtest_retire */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-retire/lib.npmtest_retire.js":"/* istanbul instrument in package npmtest_retire */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_retire = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_retire = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-retire/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-retire && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_retire */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_retire\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_retire.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_retire.rollup.js'] =\n            local.assetsDict['/assets.npmtest_retire.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_retire.__dirname + '/lib.npmtest_retire.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-retire/node_modules/retire/lib/retire.js":"/* \n * This file is used by the browser plugins and the Cli scanner and thus \n * cannot have any external dependencies (no require)\t\n */\n\nvar exports = exports || {};\nexports.version = '1.2.12';\n\nfunction isDefined(o) {\n\treturn typeof o !== 'undefined';\n}\n\nfunction uniq(results){\n\tvar keys = {};\n\treturn results.filter(function(r) {\n\t\tvar k = r.component + ' ' + r.version;\n\t\tkeys[k] = keys[k] || 0;\n\t\treturn keys[k]++ === 0;\n\t});\n}\n\nfunction scan(data, extractor, repo, matcher) {\n\tmatcher = matcher || simpleMatch;\n\tvar detected = [];\n\tfor (var component in repo) {\n\t\tvar extractors = repo[component].extractors[extractor];\n\t\tif (!isDefined(extractors)) continue;\n\t\tfor (var i in extractors) {\n\t\t\tvar match = matcher(extractors[i], data);\n\t\t\tif (match) {\n\t\t\t\tdetected.push({ version: match, component: component, detection: extractor });\n\t\t\t}\n\t\t}\n\t}\n\treturn uniq(detected);\n}\n\nfunction simpleMatch(regex, data) {\n\tvar re = new RegExp(regex);\n\tvar match = re.exec(data);\n\treturn match ? match[1] : null;\n}\nfunction replacementMatch(regex, data) {\n\tvar ar = /^\\/(.*[^\\\\])\\/([^\\/]+)\\/$/.exec(regex);\n\tvar re = new RegExp(ar[1]);\n\tvar match = re.exec(data);\n\tvar ver = null;\n\tif (match) {\n\t\tver = match[0].replace(new RegExp(ar[1]), ar[2]);\n\t\treturn ver;\n\t}\n\treturn null;\n}\n\n\nfunction scanhash(hash, repo) {\n\tfor (var component in repo) {\n\t\tvar hashes = repo[component].extractors.hashes;\n\t\tif (!isDefined(hashes)) continue;\n\t\tfor (var i in hashes) {\n\t\t\tif (i === hash) return [{ version: hashes[i], component: component, detection: 'hash' }];\n\t\t}\n\t}\n\treturn [];\n}\n\n\n\nfunction check(results, repo) {\n\tfor (var r in results) {\n\t\tvar result = results[r];\n\t\tif (!isDefined(repo[result.component])) continue;\n\t\tvar vulns = repo[result.component].vulnerabilities;\n\t\tfor (var i in vulns) {\n\t\t\tif (!isDefined(vulns[i].below) || !isAtOrAbove(result.version, vulns[i].below)) {\n\t\t\t\tif (isDefined(vulns[i].atOrAbove) && !isAtOrAbove(result.version, vulns[i].atOrAbove)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar vulnerability = { info : vulns[i].info };\n\t\t\t\tif (vulns[i].severity) {\n\t\t\t\t\tvulnerability.severity = vulns[i].severity;\n\t\t\t\t}\n\t\t\t\tif (vulns[i].identifiers) {\n\t\t\t\t\tvulnerability.identifiers = vulns[i].identifiers;\n\t\t\t\t}\n\t\t\t\tresult.vulnerabilities = result.vulnerabilities || [];\n\t\t\t\tresult.vulnerabilities.push(vulnerability);\n\t\t\t}\n\t\t}\n\t}\n\treturn results;\n}\n\nfunction unique(ar) {\n\tvar r = [];\n\tar.forEach(function(e) { \n\t\tif (r.indexOf(e) == -1) r.push(e);\n\t});\n\treturn r;\n}\n\n\nfunction isAtOrAbove(version1, version2) {\n\tvar v1 = version1.split(/[\\.\\-]/g);\n\tvar v2 = version2.split(/[\\.\\-]/g);\n\tvar l = v1.length > v2.length ? v1.length : v2.length;\n\tfor (var i = 0; i < l; i++) {\n\t\tvar v1_c = toComparable(v1[i]);\n\t\tvar v2_c = toComparable(v2[i]);\n\t\tif (typeof v1_c !== typeof v2_c) return typeof v1_c === 'number';\n\t\tif (v1_c > v2_c) return true;\n\t\tif (v1_c < v2_c) return false;\n\t}\n\treturn true;\n}\n\nfunction toComparable(n) {\n\tif (!isDefined(n)) return 0;\n\tif (n.match(/^[0-9]+$/)) {\n\t\treturn parseInt(n, 10);\n\t}\n\treturn n;\n}\n\n\n//------- External API -------\n\nexports.check = function(component, version, repo) {\n\treturn check([{component: component, version: version}], repo);\n};\n\nexports.replaceVersion = function(jsRepoJsonAsText) {\n\treturn jsRepoJsonAsText.replace(/§§version§§/g, '[0-9][0-9.a-z_\\\\\\\\-]+');\n};\n\nexports.isVulnerable = function(results) {\n\tfor (var r in results) {\n\t\tif (results[r].hasOwnProperty('vulnerabilities')) return true;\n\t}\n\treturn false;\n};\n\nexports.scanUri = function(uri, repo) {\n\tvar result = scan(uri, 'uri', repo);\n\treturn check(result, repo);\n};\n\nexports.scanFileName = function(fileName, repo) {\n\tvar result = scan(fileName, 'filename', repo);\n\treturn check(result, repo);\n};\n\nexports.scanFileContent = function(content, repo, hasher) {\n\tvar result = scan(content, 'filecontent', repo);\n\tif (result.length === 0) {\n\t\tresult = scan(content, 'filecontentreplace', repo, replacementMatch);\n\t}\n\tif (result.length === 0) {\n\t\tresult = scanhash(hasher.sha1(content), repo);\n\t}\n\treturn check(result, repo);\n};\n\nexports.scanNodeDependency = function(dependency, npmrepo) {\n\tif (!isDefined(dependency.version)) {\n\t\tconsole.warn('Missing version for ' + dependency.component + '. Need to run npm install ?');\n\t\treturn [];\n\t}\n\tif (!isDefined(npmrepo[dependency.component])) return [];\n\treturn check([dependency], npmrepo);\n};\n\n\n\n","/home/travis/build/npmtest/node-npmtest-retire/node_modules/retire/lib/repo.js":"/* global require, console, exports */\nvar utils   = require('./utils'),\n    fs      = require('fs'),\n    req     = require('request'),\n    path    = require('path'),\n    log     = require('./utils').log,\n    forward   = require('../lib/utils').forwardEvent,\n\tretire  = require('./retire');\nvar emitter = require('events').EventEmitter;\n\n\nfunction loadJson(url, options) {\n\tvar events = new emitter();\n    var request = req;\n    var logger = log(options);\n\tlogger.info('Downloading ' + url + ' ...');\n\tif (options.proxy) {\n        request = request.defaults({'proxy' : options.proxy});\n    }\n    request.get(url, function (error, r, data) {\n        if (error) {\n            events.emit('stop', 'Error downloading: ' + url, error);\n        } else {\n            data = options.process ? options.process(data) : data;\n            var obj = JSON.parse(data);\n            events.emit('done', obj);\n        }\n    });\n\treturn events;\n}\n\nfunction loadJsonFromFile(file, options) {\n    log(options).verbose('Reading ' + file + ' ...');\n\tvar events = new emitter();\n    fs.readFile(file, { encoding : 'utf8'}, function(err, data) {\n        data = options.process ? options.process(data) : data;\n        var obj = JSON.parse(data);\n        events.emit('done', obj);\n    });\n    return events;\n}\n\nfunction loadFromCache(url, cachedir, options) {\n    var cacheIndex = path.resolve(cachedir, 'index.json');\n    if (!fs.existsSync(cachedir)) fs.mkdirSync(cachedir);\n    var cache = fs.existsSync(cacheIndex) ? JSON.parse(fs.readFileSync(cacheIndex)) : {};\n    var now = new Date().getTime();\n    if (cache[url]) {\n        if (now - cache[url].date < 60*60*1000) {\n            log(options).info(\"Loading from cache: \" + url);\n            return loadJsonFromFile(path.resolve(cachedir, cache[url].file), options);\n        } else {\n            if (fs.existsSync(path.resolve(cachedir, cache[url].date + '.json'))) {\n                fs.unlink(path.resolve(cachedir, cache[url].date + '.json'));\n            }\n        }\n    }\n    var events = new emitter();\n    loadJson(url, options).on('done', function(data) {\n        cache[url] = { date : now, file : now + '.json' };\n        fs.writeFileSync(path.resolve(cachedir, cache[url].file), JSON.stringify(data), { encoding : 'utf8' });\n        fs.writeFileSync(cacheIndex, JSON.stringify(cache), { encoding : 'utf8' });\n        events.emit('done', data);\n    }).on('stop', forward(events, 'stop'));\n    return events;\n}\n\nexports.loadrepository = function(repoUrl, options) {\n    options = utils.extend(options, { process : retire.replaceVersion });\n    if (options.nocache) {\n        return loadJson(repoUrl, options);\n    }\n    return loadFromCache(repoUrl, options.cachedir, options);\n};\n\nexports.loadrepositoryFromFile = function(filepath, options) {\n    options = utils.extend(options, { process : retire.replaceVersion });\n\treturn loadJsonFromFile(filepath, options);\n};\n","/home/travis/build/npmtest/node-npmtest-retire/node_modules/retire/lib/utils.js":"\nfunction info(options) {\n\treturn function(message) {\n\t\t(options.logger || console.log)(message);\n\t};\n}\n\nfunction warn(options) {\n\treturn function(message) {\n\t\t(options.warnlogger || options.logger || console.warn)(message);\n\t};\n}\n\nexports.pick = function(p, keys) {\n\tvar result = {};\n\tkeys.forEach(function(k) { \n\t\tif (p.hasOwnProperty(k)) {\n\t\t\tresult[k] = p[k];\n\t\t}\n\t});\n\treturn result;\n};\n\nexports.extend = function(o, a) {\n\tvar result = exports.pick(o, Object.keys(o));\n\texports.map(a, function(v,k){ result[k] = v; });\n\treturn result;\n};\n\nexports.map = function(o, fn) {\n\treturn Object.keys(o).map(function(k) { return fn(o[k], k); });\n};\n\nexports.find = function(ar, fn) {\n\tfor(var i in ar) { \n\t\tif (fn(ar[i])) return ar[i];\n\t}\n\treturn undefined;\n};\n\nexports.detect = exports.find;\n\nexports.flatten = function(e) {\n\treturn e.reduce(function(x,y) { return x.concat(y); }, []);\n};\n\nexports.log = function(options) {\n\treturn { \n\t\tinfo : info(options),\n\t\twarn : warn(options),\n\t\tverbose : options.verbose ? info(options) : function() {}\n\t};\n};\nexports.forwardEvent = function(emitter, event) {\n\treturn function() {\n\t\temitter.emit([event].concat(arguments));\n\t};\n};\n\nexports.every = function(things, predicate){\n\treturn Object.keys(things)\n\t\t.map(function(k) { return predicate(k, things[k]) })\n\t\t.reduce(function(x,y) { return x && y }, true);\n}\n","/home/travis/build/npmtest/node-npmtest-retire/node_modules/retire/lib/resolve.js":"/* global require, exports */\n\nvar walkdir\t\t\t= require('walkdir'),\n\tfs\t\t\t\t\t\t= require('fs'),\n\treadInstalled\t= require('read-installed'),\n\temitter\t\t\t\t= require('events').EventEmitter;\n\n\nfunction listdep(parent, dep, level, deps) {\n\tvar stack = [];\n\tstack.push({parent: parent, dep: dep, level: level}); \n\twhile (typeof (o = stack.pop()) !== 'undefined') {\n\t\tfor (var i in o.dep.dependencies) {\n\t\t\tcyclic = false;\n\t\t\tdep_parent = o.parent;\n\t\t\twhile (typeof dep_parent !== 'undefined') {\n\t\t\t\tif (dep_parent.component === i) {\n\t\t\t\t\tcyclic = true;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tdep_parent = dep_parent.parent;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cyclic) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar d = { component: i, version: o.dep.dependencies[i].version, parent: o.parent, level: o.level };\n\t\t\tdeps.push(d);\n\t\t\tstack.push({parent: d, dep: o.dep.dependencies[i], level: o.level + 1}); \n\t\t}\n\t}\n}\n\nfunction getNodeDependencies(path, limit) {\n\tvar events = new emitter();\n\treadInstalled(path, {}, function (er, pkginfo) {\n\t\tvar deps = [];\n\t\tif (limit) {\n\t\t\tvar packages = JSON.parse(fs.readFileSync(path +'/package.json'));\n\t\t\tfilter = [];\t\t\t\n\n\t\t\tvar filter = Object.keys(packages.dependencies);\n\t\t\tObject.keys(pkginfo.dependencies)\n\t\t\t\t.filter(function(d) { return filter.indexOf(d) == -1; })\n\t\t\t\t.forEach(function(d) { delete pkginfo.dependencies[d]; });\n\t\t}\n\t\tlistdep({component: pkginfo.name, version: pkginfo.version}, pkginfo, 1, deps);\n\t\tevents.emit('done', deps);\t\t\t\t\n\t});\n\treturn events;\n}\n\nfunction scanJsFiles(path) {\n\tvar finder = walkdir.find(path);\n\tfinder.on('file', function (file) {\n\t\tif (file.match(/\\.js$/)) {\n\t\t\tfinder.emit('jsfile', file);\n\t\t}\n\t\tif (file.match(/\\/bower.json$/)) {\n\t\t\tfinder.emit('bowerfile', file);\n\t\t}\n\t});\n\treturn finder;\n}\n\nexports.scanJsFiles = function(path) {\n\treturn scanJsFiles(path);\n};\n\nexports.getNodeDependencies = function(path, limit) {\n\treturn getNodeDependencies(path, limit);\n};\n\n","/home/travis/build/npmtest/node-npmtest-retire/node_modules/retire/lib/scanner.js":"\nvar retire = require('./retire'),\n    fs     = require('fs'),\n    crypto = require('crypto'),\n    path   = require('path'),\n    utils  = require('./utils'),\n    log    = require('./utils').log,\n    emitter   = new require('events').EventEmitter;\n\nvar events = new emitter();\n\nvar hash = {\n  'sha1' : function(data) {\n    shasum   = crypto.createHash('sha1');\n    shasum.update(data);\n    return shasum.digest('hex');\n  }\n};\n\nfunction printResults(file, results, options) {\n  removeIgnored(results, options.ignore);\n  if (!retire.isVulnerable(results) && !options.verbose) return;\n  var logger = log(options).info;\n  if (retire.isVulnerable(results)) {\n    logger = log(options).warn;\n    events.emit('vulnerable-dependency-found', {file: file, results: results});\n  } else {\n    events.emit('dependency-found', {file: file, results: results});\n  }\n  if (results.length > 0) {\n    logger(file);\n    var printed = {};\n    results.forEach(function(elm) {\n      var vuln = '';\n      var key = elm.component + ' ' + elm.version;\n      if (printed[key]) return;\n      if (retire.isVulnerable([elm])) {\n        vuln = ' has known vulnerabilities:' + printVulnerability(elm, options);\n      }\n      logger(' ' + String.fromCharCode(8627) + ' ' + key + vuln);\n      printed[key] = true;\n    });\n  }\n}\n\nfunction printVulnerability(component, options) {\n  var string = '';\n  component.vulnerabilities.forEach(function(vulnerability){\n    string += options.outputformat === 'clean' ? '\\n   ' : ' ';\n    if (vulnerability.severity) {\n      string += 'severity: ' + vulnerability.severity + '; ';\n    }\n    if (vulnerability.identifiers) {\n      string += utils.map(vulnerability.identifiers, function(id, name) {\n        return name + ': ' + utils.flatten([id]).join(' ');\n      }).join(', ') + '; ';\n    }\n    string += vulnerability.info.join(options.outputformat === 'clean' ? '\\n' : ' ');\n  });\n  return string;\n}\n\nfunction shouldIgnorePath(fileSpecs, ignores) {\n  return utils.detect(ignores.paths, function(i) {\n    return utils.detect(fileSpecs, function(j) {\n      return j.indexOf(i) === 0 || j.indexOf(path.resolve(i)) === 0 ; \n    });\n  });\n}\n\nfunction removeIgnored(results, ignores) {\n  if (!ignores.hasOwnProperty(\"descriptors\")) return;\n  results.forEach(function(r) {\n    if (!r.hasOwnProperty(\"vulnerabilities\")) return;\n    ignores.descriptors.forEach(function(i) {\n      if (r.component !== i.component) return;\n      if (i.version && r.version !== i.version) return;\n      if (i.identifiers) {\n        removeIgnoredVulnerabilitiesByIdentifier(i.identifiers, r);\n        return;\n      }\n      r.vulnerabilities = [];\n    });\n    if (r.vulnerabilities.length === 0) delete r.vulnerabilities;\n  });\n}\n\nfunction removeIgnoredVulnerabilitiesByIdentifier(identifiers, result) {\n  result.vulnerabilities = result.vulnerabilities.filter(function(v) {\n    if (!v.hasOwnProperty(\"identifiers\")) return true;\n    return !utils.every(identifiers, function(key, value) { return hasIdentifier(v, key, value); });\n  });\n}\nfunction hasIdentifier(vulnerability, key, value) {\n  if (!vulnerability.identifiers.hasOwnProperty(key)) return false;\n  var identifier = vulnerability.identifiers[key];\n  return Array.isArray(identifier) ? identifier.some(function(x) { return x === value; }) : identifier === value;\n}\n\n\nfunction scanJsFile(file, repo, options) {\n  if (options.ignore && shouldIgnorePath([file], options.ignore)) {\n    return;\n  }\n  var results = retire.scanFileName(file, repo);\n  if (!results || results.length === 0) {\n    results = retire.scanFileContent(fs.readFileSync(file), repo, hash);\n  }\n  printResults(file, results, options);\n}\n\nfunction printParent(comp, options) {\n  if ('parent' in comp) printParent(comp.parent, options);\n  log(options).info(new Array(comp.level).join(' ') + (comp.parent ? String.fromCharCode(8627) + ' ' : '') + comp.component + ' ' + comp.version);\n}\n\nfunction scanDependencies(dependencies, nodeRepo, options) {\n  for (var i in dependencies) {\n    if (options.ignore && shouldIgnorePath([dependencies[i].component, toModulePath(dependencies[i])], options.ignore)) {\n      continue;\n    }\n    results = retire.scanNodeDependency(dependencies[i], nodeRepo);\n    if (retire.isVulnerable(results)) {\n      events.emit('vulnerable-dependency-found', {results: results});\n      var result = results[0]; //Only single scan here\n      log(options).warn(result.component + ' ' + result.version + ' has known vulnerabilities: ' + printVulnerability(result, options));\n      if (result.parent) {\n        printParent(result, options);\n      }\n    } else {\n      events.emit('dependency-found', results);\n    }\n  }\n}\n\nfunction toModulePath(dep) {\n  function f(d) {\n    if (d.parent) return f(d.parent) + \"/node_modules/\" + d.component;\n    return \"\";\n  }\n  return path.resolve(f(dep).substring(1));\n}\n\n\n\nfunction scanBowerFile(file, repo, options) {\n  if (options.ignore && shouldIgnorePath([file], options.ignore)) {\n    return;\n  }\n  try {\n    var bower = JSON.parse(fs.readFileSync(file));\n    if (bower.version) {\n      var results = retire.check(bower.name, bower.version, repo);\n      printResults(file, results, options);\n    }\n  } catch (e) {\n    log(options).warn('Could not parse file: ' + file);\n  }\n}\n\n\n\nexports.scanDependencies = function(dependencies, nodeRepo, options) {\n\treturn scanDependencies(dependencies, nodeRepo, options);\n};\nexports.scanJsFile = function(file, repo, options) {\n\treturn scanJsFile(file, repo, options);\n};\nexports.scanBowerFile = function(file, repo, options) {\n  return scanBowerFile(file, repo, options);\n};\nexports.on = function(name, listener) {\n\tevents.on(name, listener);\n};\n\n\n"}